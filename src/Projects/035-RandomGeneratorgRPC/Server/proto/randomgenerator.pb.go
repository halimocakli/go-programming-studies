// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v3.12.4
// source: randomgenerator.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type NoParam struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *NoParam) Reset() {
	*x = NoParam{}
	if protoimpl.UnsafeEnabled {
		mi := &file_randomgenerator_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NoParam) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NoParam) ProtoMessage() {}

func (x *NoParam) ProtoReflect() protoreflect.Message {
	mi := &file_randomgenerator_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NoParam.ProtoReflect.Descriptor instead.
func (*NoParam) Descriptor() ([]byte, []int) {
	return file_randomgenerator_proto_rawDescGZIP(), []int{0}
}

type TextBound struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MinCount int32 `protobuf:"zigzag32,1,opt,name=minCount,proto3" json:"minCount,omitempty"`
	MaxCount int32 `protobuf:"zigzag32,2,opt,name=maxCount,proto3" json:"maxCount,omitempty"`
}

func (x *TextBound) Reset() {
	*x = TextBound{}
	if protoimpl.UnsafeEnabled {
		mi := &file_randomgenerator_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextBound) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextBound) ProtoMessage() {}

func (x *TextBound) ProtoReflect() protoreflect.Message {
	mi := &file_randomgenerator_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextBound.ProtoReflect.Descriptor instead.
func (*TextBound) Descriptor() ([]byte, []int) {
	return file_randomgenerator_proto_rawDescGZIP(), []int{1}
}

func (x *TextBound) GetMinCount() int32 {
	if x != nil {
		return x.MinCount
	}
	return 0
}

func (x *TextBound) GetMaxCount() int32 {
	if x != nil {
		return x.MaxCount
	}
	return 0
}

type TextGenerateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"zigzag32,1,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *TextGenerateInfo) Reset() {
	*x = TextGenerateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_randomgenerator_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextGenerateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextGenerateInfo) ProtoMessage() {}

func (x *TextGenerateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_randomgenerator_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextGenerateInfo.ProtoReflect.Descriptor instead.
func (*TextGenerateInfo) Descriptor() ([]byte, []int) {
	return file_randomgenerator_proto_rawDescGZIP(), []int{2}
}

func (x *TextGenerateInfo) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type TextsGenerateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Count int32 `protobuf:"zigzag32,1,opt,name=count,proto3" json:"count,omitempty"`
	N     int32 `protobuf:"zigzag32,2,opt,name=n,proto3" json:"n,omitempty"`
}

func (x *TextsGenerateInfo) Reset() {
	*x = TextsGenerateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_randomgenerator_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextsGenerateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextsGenerateInfo) ProtoMessage() {}

func (x *TextsGenerateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_randomgenerator_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextsGenerateInfo.ProtoReflect.Descriptor instead.
func (*TextsGenerateInfo) Descriptor() ([]byte, []int) {
	return file_randomgenerator_proto_rawDescGZIP(), []int{3}
}

func (x *TextsGenerateInfo) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

func (x *TextsGenerateInfo) GetN() int32 {
	if x != nil {
		return x.N
	}
	return 0
}

type TextInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text string `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *TextInfo) Reset() {
	*x = TextInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_randomgenerator_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TextInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextInfo) ProtoMessage() {}

func (x *TextInfo) ProtoReflect() protoreflect.Message {
	mi := &file_randomgenerator_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextInfo.ProtoReflect.Descriptor instead.
func (*TextInfo) Descriptor() ([]byte, []int) {
	return file_randomgenerator_proto_rawDescGZIP(), []int{4}
}

func (x *TextInfo) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type Int32GenerateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min   int32 `protobuf:"zigzag32,1,opt,name=min,proto3" json:"min,omitempty"`
	Bound int32 `protobuf:"zigzag32,2,opt,name=bound,proto3" json:"bound,omitempty"`
}

func (x *Int32GenerateInfo) Reset() {
	*x = Int32GenerateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_randomgenerator_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int32GenerateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int32GenerateInfo) ProtoMessage() {}

func (x *Int32GenerateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_randomgenerator_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int32GenerateInfo.ProtoReflect.Descriptor instead.
func (*Int32GenerateInfo) Descriptor() ([]byte, []int) {
	return file_randomgenerator_proto_rawDescGZIP(), []int{5}
}

func (x *Int32GenerateInfo) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Int32GenerateInfo) GetBound() int32 {
	if x != nil {
		return x.Bound
	}
	return 0
}

type Int32SGenerateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min   int32 `protobuf:"zigzag32,1,opt,name=min,proto3" json:"min,omitempty"`
	Bound int32 `protobuf:"zigzag32,2,opt,name=bound,proto3" json:"bound,omitempty"`
	Count int32 `protobuf:"zigzag32,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *Int32SGenerateInfo) Reset() {
	*x = Int32SGenerateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_randomgenerator_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int32SGenerateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int32SGenerateInfo) ProtoMessage() {}

func (x *Int32SGenerateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_randomgenerator_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int32SGenerateInfo.ProtoReflect.Descriptor instead.
func (*Int32SGenerateInfo) Descriptor() ([]byte, []int) {
	return file_randomgenerator_proto_rawDescGZIP(), []int{6}
}

func (x *Int32SGenerateInfo) GetMin() int32 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Int32SGenerateInfo) GetBound() int32 {
	if x != nil {
		return x.Bound
	}
	return 0
}

func (x *Int32SGenerateInfo) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Int32Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int32 `protobuf:"zigzag32,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Int32Result) Reset() {
	*x = Int32Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_randomgenerator_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int32Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int32Result) ProtoMessage() {}

func (x *Int32Result) ProtoReflect() protoreflect.Message {
	mi := &file_randomgenerator_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int32Result.ProtoReflect.Descriptor instead.
func (*Int32Result) Descriptor() ([]byte, []int) {
	return file_randomgenerator_proto_rawDescGZIP(), []int{7}
}

func (x *Int32Result) GetValue() int32 {
	if x != nil {
		return x.Value
	}
	return 0
}

type DoubleGenerateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min   float64 `protobuf:"fixed64,1,opt,name=min,proto3" json:"min,omitempty"`
	Bound float64 `protobuf:"fixed64,2,opt,name=bound,proto3" json:"bound,omitempty"`
}

func (x *DoubleGenerateInfo) Reset() {
	*x = DoubleGenerateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_randomgenerator_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleGenerateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleGenerateInfo) ProtoMessage() {}

func (x *DoubleGenerateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_randomgenerator_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleGenerateInfo.ProtoReflect.Descriptor instead.
func (*DoubleGenerateInfo) Descriptor() ([]byte, []int) {
	return file_randomgenerator_proto_rawDescGZIP(), []int{8}
}

func (x *DoubleGenerateInfo) GetMin() float64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *DoubleGenerateInfo) GetBound() float64 {
	if x != nil {
		return x.Bound
	}
	return 0
}

type DoubleResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value float64 `protobuf:"fixed64,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *DoubleResult) Reset() {
	*x = DoubleResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_randomgenerator_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoubleResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoubleResult) ProtoMessage() {}

func (x *DoubleResult) ProtoReflect() protoreflect.Message {
	mi := &file_randomgenerator_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoubleResult.ProtoReflect.Descriptor instead.
func (*DoubleResult) Descriptor() ([]byte, []int) {
	return file_randomgenerator_proto_rawDescGZIP(), []int{9}
}

func (x *DoubleResult) GetValue() float64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type DoublesGenerateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min   float64 `protobuf:"fixed64,1,opt,name=min,proto3" json:"min,omitempty"`
	Bound float64 `protobuf:"fixed64,2,opt,name=bound,proto3" json:"bound,omitempty"`
	Count int32   `protobuf:"zigzag32,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *DoublesGenerateInfo) Reset() {
	*x = DoublesGenerateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_randomgenerator_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DoublesGenerateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DoublesGenerateInfo) ProtoMessage() {}

func (x *DoublesGenerateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_randomgenerator_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DoublesGenerateInfo.ProtoReflect.Descriptor instead.
func (*DoublesGenerateInfo) Descriptor() ([]byte, []int) {
	return file_randomgenerator_proto_rawDescGZIP(), []int{10}
}

func (x *DoublesGenerateInfo) GetMin() float64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *DoublesGenerateInfo) GetBound() float64 {
	if x != nil {
		return x.Bound
	}
	return 0
}

func (x *DoublesGenerateInfo) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Int64GenerateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min   int64 `protobuf:"zigzag64,1,opt,name=min,proto3" json:"min,omitempty"`
	Bound int64 `protobuf:"zigzag64,2,opt,name=bound,proto3" json:"bound,omitempty"`
}

func (x *Int64GenerateInfo) Reset() {
	*x = Int64GenerateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_randomgenerator_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int64GenerateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int64GenerateInfo) ProtoMessage() {}

func (x *Int64GenerateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_randomgenerator_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int64GenerateInfo.ProtoReflect.Descriptor instead.
func (*Int64GenerateInfo) Descriptor() ([]byte, []int) {
	return file_randomgenerator_proto_rawDescGZIP(), []int{11}
}

func (x *Int64GenerateInfo) GetMin() int64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Int64GenerateInfo) GetBound() int64 {
	if x != nil {
		return x.Bound
	}
	return 0
}

type Int64SGenerateInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Min   int64 `protobuf:"zigzag64,1,opt,name=min,proto3" json:"min,omitempty"`
	Bound int64 `protobuf:"zigzag64,2,opt,name=bound,proto3" json:"bound,omitempty"`
	Count int32 `protobuf:"zigzag32,3,opt,name=count,proto3" json:"count,omitempty"`
}

func (x *Int64SGenerateInfo) Reset() {
	*x = Int64SGenerateInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_randomgenerator_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int64SGenerateInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int64SGenerateInfo) ProtoMessage() {}

func (x *Int64SGenerateInfo) ProtoReflect() protoreflect.Message {
	mi := &file_randomgenerator_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int64SGenerateInfo.ProtoReflect.Descriptor instead.
func (*Int64SGenerateInfo) Descriptor() ([]byte, []int) {
	return file_randomgenerator_proto_rawDescGZIP(), []int{12}
}

func (x *Int64SGenerateInfo) GetMin() int64 {
	if x != nil {
		return x.Min
	}
	return 0
}

func (x *Int64SGenerateInfo) GetBound() int64 {
	if x != nil {
		return x.Bound
	}
	return 0
}

func (x *Int64SGenerateInfo) GetCount() int32 {
	if x != nil {
		return x.Count
	}
	return 0
}

type Int64Result struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Value int64 `protobuf:"zigzag64,1,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *Int64Result) Reset() {
	*x = Int64Result{}
	if protoimpl.UnsafeEnabled {
		mi := &file_randomgenerator_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Int64Result) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Int64Result) ProtoMessage() {}

func (x *Int64Result) ProtoReflect() protoreflect.Message {
	mi := &file_randomgenerator_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Int64Result.ProtoReflect.Descriptor instead.
func (*Int64Result) Descriptor() ([]byte, []int) {
	return file_randomgenerator_proto_rawDescGZIP(), []int{13}
}

func (x *Int64Result) GetValue() int64 {
	if x != nil {
		return x.Value
	}
	return 0
}

var File_randomgenerator_proto protoreflect.FileDescriptor

var file_randomgenerator_proto_rawDesc = []byte{
	0x0a, 0x15, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x1c, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x22, 0x09, 0x0a, 0x07, 0x4e, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x22, 0x43, 0x0a, 0x09, 0x54, 0x65, 0x78, 0x74, 0x42, 0x6f, 0x75, 0x6e, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52,
	0x08, 0x6d, 0x69, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x78,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x08, 0x6d, 0x61, 0x78,
	0x43, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x28, 0x0a, 0x10, 0x54, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22,
	0x37, 0x0a, 0x11, 0x54, 0x65, 0x78, 0x74, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x11, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x01, 0x6e, 0x22, 0x1e, 0x0a, 0x08, 0x54, 0x65, 0x78, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x3b, 0x0a, 0x11, 0x49, 0x6e, 0x74, 0x33,
	0x32, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12,
	0x14, 0x0a, 0x05, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x05,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x52, 0x0a, 0x12, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x73, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x11, 0x52, 0x05, 0x62, 0x6f,
	0x75, 0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x11, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x23, 0x0a, 0x0b, 0x49, 0x6e, 0x74,
	0x33, 0x32, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x11, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0x3c,
	0x0a, 0x12, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x01, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x22, 0x24, 0x0a, 0x0c,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x53, 0x0a, 0x13, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x73, 0x47, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x01, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x01, 0x52, 0x05, 0x62, 0x6f, 0x75, 0x6e,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x11,
	0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3b, 0x0a, 0x11, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x69, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x14,
	0x0a, 0x05, 0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x62,
	0x6f, 0x75, 0x6e, 0x64, 0x22, 0x52, 0x0a, 0x12, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x73, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x03, 0x6d, 0x69, 0x6e, 0x12, 0x14, 0x0a, 0x05,
	0x62, 0x6f, 0x75, 0x6e, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x62, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x11, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x23, 0x0a, 0x0b, 0x49, 0x6e, 0x74, 0x36,
	0x34, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x12, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x32, 0xa2, 0x0d,
	0x0a, 0x1a, 0x52, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x54, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x68, 0x0a, 0x0e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x45, 0x4e, 0x12, 0x2e,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x2e, 0x54, 0x65,
	0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x26,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x2e, 0x54, 0x65,
	0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x68, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x54, 0x52, 0x12, 0x2e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65,
	0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x26, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63,
	0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x2e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x6c, 0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74,
	0x73, 0x45, 0x4e, 0x12, 0x2f, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x26, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x30, 0x01, 0x12, 0x6c,
	0x0a, 0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x54, 0x65, 0x78, 0x74, 0x73, 0x54,
	0x52, 0x12, 0x2f, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x2e, 0x54, 0x65, 0x78, 0x74, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x66, 0x6f, 0x1a, 0x26, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x30, 0x01, 0x12, 0x72, 0x0a, 0x16,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x4a, 0x6f, 0x69, 0x6e, 0x54,
	0x65, 0x78, 0x74, 0x73, 0x45, 0x4e, 0x12, 0x2e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x26, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x28, 0x01,
	0x12, 0x72, 0x0a, 0x16, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x41, 0x6e, 0x64, 0x4a,
	0x6f, 0x69, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x73, 0x54, 0x52, 0x12, 0x2e, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x63, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x47, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x26, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x63, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x28, 0x01, 0x12, 0x75, 0x0a, 0x17, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x54, 0x65, 0x78, 0x74, 0x73, 0x45, 0x4e, 0x12,
	0x2e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x2e, 0x54,
	0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a,
	0x26, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x67, 0x65,
	0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x2e, 0x54,
	0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x28, 0x01, 0x30, 0x01, 0x12, 0x75, 0x0a, 0x17, 0x47,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x4d, 0x75, 0x6c, 0x74, 0x69, 0x70, 0x6c, 0x65, 0x54,
	0x65, 0x78, 0x74, 0x73, 0x54, 0x52, 0x12, 0x2e, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61,
	0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x26, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72,
	0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x28, 0x01,
	0x30, 0x01, 0x12, 0x5e, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x54, 0x65, 0x78, 0x74, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x25, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d,
	0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e, 0x64, 0x6f,
	0x6d, 0x2e, 0x4e, 0x6f, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x1a, 0x27, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x63, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x42, 0x6f, 0x75,
	0x6e, 0x64, 0x12, 0x6b, 0x0a, 0x0d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x12, 0x2f, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65,
	0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x29, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79, 0x73, 0x74,
	0x65, 0x6d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e,
	0x64, 0x6f, 0x6d, 0x2e, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x6e, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x75, 0x62, 0x6c,
	0x65, 0x12, 0x30, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0x2a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12,
	0x6b, 0x0a, 0x0d, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x36, 0x34,
	0x12, 0x2f, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x2e,
	0x49, 0x6e, 0x74, 0x36, 0x34, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66,
	0x6f, 0x1a, 0x29, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e,
	0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d,
	0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x6f, 0x0a, 0x0e,
	0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74, 0x33, 0x32, 0x73, 0x12, 0x30,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x67, 0x65, 0x6e,
	0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x2e, 0x49, 0x6e,
	0x74, 0x33, 0x32, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x66, 0x6f,
	0x1a, 0x29, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x2e,
	0x49, 0x6e, 0x74, 0x33, 0x32, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x30, 0x01, 0x12, 0x72, 0x0a,
	0x0f, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x73,
	0x12, 0x31, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x67,
	0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e, 0x64, 0x6f, 0x6d, 0x2e,
	0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49,
	0x6e, 0x66, 0x6f, 0x1a, 0x2a, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x2e, 0x44, 0x6f, 0x75, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x30,
	0x01, 0x12, 0x6f, 0x0a, 0x0e, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x65, 0x49, 0x6e, 0x74,
	0x36, 0x34, 0x73, 0x12, 0x30, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x61, 0x6e, 0x64,
	0x6f, 0x6d, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x73, 0x47, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74,
	0x65, 0x49, 0x6e, 0x66, 0x6f, 0x1a, 0x29, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x63, 0x73, 0x79, 0x73,
	0x74, 0x65, 0x6d, 0x2e, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x2e, 0x72, 0x61,
	0x6e, 0x64, 0x6f, 0x6d, 0x2e, 0x49, 0x6e, 0x74, 0x36, 0x34, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x30, 0x01, 0x42, 0x28, 0x5a, 0x26, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x67, 0x6f, 0x6c,
	0x61, 0x6e, 0x67, 0x2e, 0x6f, 0x72, 0x67, 0x2f, 0x67, 0x72, 0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f,
	0x66, 0x69, 0x6c, 0x69, 0x6e, 0x67, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_randomgenerator_proto_rawDescOnce sync.Once
	file_randomgenerator_proto_rawDescData = file_randomgenerator_proto_rawDesc
)

func file_randomgenerator_proto_rawDescGZIP() []byte {
	file_randomgenerator_proto_rawDescOnce.Do(func() {
		file_randomgenerator_proto_rawDescData = protoimpl.X.CompressGZIP(file_randomgenerator_proto_rawDescData)
	})
	return file_randomgenerator_proto_rawDescData
}

var file_randomgenerator_proto_msgTypes = make([]protoimpl.MessageInfo, 14)
var file_randomgenerator_proto_goTypes = []any{
	(*NoParam)(nil),             // 0: org.csystem.generator.random.NoParam
	(*TextBound)(nil),           // 1: org.csystem.generator.random.TextBound
	(*TextGenerateInfo)(nil),    // 2: org.csystem.generator.random.TextGenerateInfo
	(*TextsGenerateInfo)(nil),   // 3: org.csystem.generator.random.TextsGenerateInfo
	(*TextInfo)(nil),            // 4: org.csystem.generator.random.TextInfo
	(*Int32GenerateInfo)(nil),   // 5: org.csystem.generator.random.Int32GenerateInfo
	(*Int32SGenerateInfo)(nil),  // 6: org.csystem.generator.random.Int32sGenerateInfo
	(*Int32Result)(nil),         // 7: org.csystem.generator.random.Int32Result
	(*DoubleGenerateInfo)(nil),  // 8: org.csystem.generator.random.DoubleGenerateInfo
	(*DoubleResult)(nil),        // 9: org.csystem.generator.random.DoubleResult
	(*DoublesGenerateInfo)(nil), // 10: org.csystem.generator.random.DoublesGenerateInfo
	(*Int64GenerateInfo)(nil),   // 11: org.csystem.generator.random.Int64GenerateInfo
	(*Int64SGenerateInfo)(nil),  // 12: org.csystem.generator.random.Int64sGenerateInfo
	(*Int64Result)(nil),         // 13: org.csystem.generator.random.Int64Result
}
var file_randomgenerator_proto_depIdxs = []int32{
	2,  // 0: org.csystem.generator.random.RandomTextGeneratorService.GenerateTextEN:input_type -> org.csystem.generator.random.TextGenerateInfo
	2,  // 1: org.csystem.generator.random.RandomTextGeneratorService.GenerateTextTR:input_type -> org.csystem.generator.random.TextGenerateInfo
	3,  // 2: org.csystem.generator.random.RandomTextGeneratorService.GenerateTextsEN:input_type -> org.csystem.generator.random.TextsGenerateInfo
	3,  // 3: org.csystem.generator.random.RandomTextGeneratorService.GenerateTextsTR:input_type -> org.csystem.generator.random.TextsGenerateInfo
	2,  // 4: org.csystem.generator.random.RandomTextGeneratorService.GenerateAndJoinTextsEN:input_type -> org.csystem.generator.random.TextGenerateInfo
	2,  // 5: org.csystem.generator.random.RandomTextGeneratorService.GenerateAndJoinTextsTR:input_type -> org.csystem.generator.random.TextGenerateInfo
	2,  // 6: org.csystem.generator.random.RandomTextGeneratorService.GenerateMultipleTextsEN:input_type -> org.csystem.generator.random.TextGenerateInfo
	2,  // 7: org.csystem.generator.random.RandomTextGeneratorService.GenerateMultipleTextsTR:input_type -> org.csystem.generator.random.TextGenerateInfo
	0,  // 8: org.csystem.generator.random.RandomTextGeneratorService.GetTextBound:input_type -> org.csystem.generator.random.NoParam
	5,  // 9: org.csystem.generator.random.RandomTextGeneratorService.GenerateInt32:input_type -> org.csystem.generator.random.Int32GenerateInfo
	8,  // 10: org.csystem.generator.random.RandomTextGeneratorService.GenerateDouble:input_type -> org.csystem.generator.random.DoubleGenerateInfo
	11, // 11: org.csystem.generator.random.RandomTextGeneratorService.GenerateInt64:input_type -> org.csystem.generator.random.Int64GenerateInfo
	6,  // 12: org.csystem.generator.random.RandomTextGeneratorService.GenerateInt32s:input_type -> org.csystem.generator.random.Int32sGenerateInfo
	10, // 13: org.csystem.generator.random.RandomTextGeneratorService.GenerateDoubles:input_type -> org.csystem.generator.random.DoublesGenerateInfo
	12, // 14: org.csystem.generator.random.RandomTextGeneratorService.GenerateInt64s:input_type -> org.csystem.generator.random.Int64sGenerateInfo
	4,  // 15: org.csystem.generator.random.RandomTextGeneratorService.GenerateTextEN:output_type -> org.csystem.generator.random.TextInfo
	4,  // 16: org.csystem.generator.random.RandomTextGeneratorService.GenerateTextTR:output_type -> org.csystem.generator.random.TextInfo
	4,  // 17: org.csystem.generator.random.RandomTextGeneratorService.GenerateTextsEN:output_type -> org.csystem.generator.random.TextInfo
	4,  // 18: org.csystem.generator.random.RandomTextGeneratorService.GenerateTextsTR:output_type -> org.csystem.generator.random.TextInfo
	4,  // 19: org.csystem.generator.random.RandomTextGeneratorService.GenerateAndJoinTextsEN:output_type -> org.csystem.generator.random.TextInfo
	4,  // 20: org.csystem.generator.random.RandomTextGeneratorService.GenerateAndJoinTextsTR:output_type -> org.csystem.generator.random.TextInfo
	4,  // 21: org.csystem.generator.random.RandomTextGeneratorService.GenerateMultipleTextsEN:output_type -> org.csystem.generator.random.TextInfo
	4,  // 22: org.csystem.generator.random.RandomTextGeneratorService.GenerateMultipleTextsTR:output_type -> org.csystem.generator.random.TextInfo
	1,  // 23: org.csystem.generator.random.RandomTextGeneratorService.GetTextBound:output_type -> org.csystem.generator.random.TextBound
	7,  // 24: org.csystem.generator.random.RandomTextGeneratorService.GenerateInt32:output_type -> org.csystem.generator.random.Int32Result
	9,  // 25: org.csystem.generator.random.RandomTextGeneratorService.GenerateDouble:output_type -> org.csystem.generator.random.DoubleResult
	13, // 26: org.csystem.generator.random.RandomTextGeneratorService.GenerateInt64:output_type -> org.csystem.generator.random.Int64Result
	7,  // 27: org.csystem.generator.random.RandomTextGeneratorService.GenerateInt32s:output_type -> org.csystem.generator.random.Int32Result
	9,  // 28: org.csystem.generator.random.RandomTextGeneratorService.GenerateDoubles:output_type -> org.csystem.generator.random.DoubleResult
	13, // 29: org.csystem.generator.random.RandomTextGeneratorService.GenerateInt64s:output_type -> org.csystem.generator.random.Int64Result
	15, // [15:30] is the sub-list for method output_type
	0,  // [0:15] is the sub-list for method input_type
	0,  // [0:0] is the sub-list for extension type_name
	0,  // [0:0] is the sub-list for extension extendee
	0,  // [0:0] is the sub-list for field type_name
}

func init() { file_randomgenerator_proto_init() }
func file_randomgenerator_proto_init() {
	if File_randomgenerator_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_randomgenerator_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*NoParam); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_randomgenerator_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*TextBound); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_randomgenerator_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*TextGenerateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_randomgenerator_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*TextsGenerateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_randomgenerator_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*TextInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_randomgenerator_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*Int32GenerateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_randomgenerator_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*Int32SGenerateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_randomgenerator_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*Int32Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_randomgenerator_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*DoubleGenerateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_randomgenerator_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*DoubleResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_randomgenerator_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*DoublesGenerateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_randomgenerator_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*Int64GenerateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_randomgenerator_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*Int64SGenerateInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_randomgenerator_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*Int64Result); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_randomgenerator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   14,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_randomgenerator_proto_goTypes,
		DependencyIndexes: file_randomgenerator_proto_depIdxs,
		MessageInfos:      file_randomgenerator_proto_msgTypes,
	}.Build()
	File_randomgenerator_proto = out.File
	file_randomgenerator_proto_rawDesc = nil
	file_randomgenerator_proto_goTypes = nil
	file_randomgenerator_proto_depIdxs = nil
}
